{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","passsword","doLogin","App","isLoggedin","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6dd935c.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\nclass UserStore{\n       constructor(){\n       extendObservable(this, {\n       \n       loading:true,\n       isLoggedIn:false,\n       username:''});\n       }\n       }\nexport default new UserStore();\n","import React from 'react';\n\n\nclass InputField extends React.Component {\n  render() {\n  return (\n    <div className=\"inputField\">\n    <input className='input'\n    type={this.props.type}\n    placeholder={this.props.placeholder}\n    value={this.props.value}\n    onChange={ (e) => this.props.onChange(e.target.value) } />\n      \n    </div>\n  );\n  }\n}\n\nexport default InputField;\n","import React from 'react';\n\n\nclass SubmitButton extends React.Component {\n  render() {\n  return (\n    <div className=\"submitButton\">\n    <button className='btn' disabled={this.props.disabled} onClick={ () => this.props.onClick()} >\n    {this.props.text}\n    \n    </button>\n      \n    </div>\n  );\n  }\n}\n\nexport default SubmitButton;\n","import React from 'react';\nimport UserStore from './stores/UserStore';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\n\nclass LoginForm extends React.Component {\nconstructor(props){\n              super(props);\n              this.state={\n              username: '',\n              password: '',\n              buttonDisabled: false}\n              }\nsetInputValue(property, val){\nval = val.trim();\nif (val.length > 12)\n{ return;}\nthis.setState({\n[property]: val})\n}\nresetForm() {\nthis.setState({\nusername: '',\npassword: '',\nbuttonDisabled: false})\n}\n\nasync doLogin() {\nif (!this.state.username) {return;}\nif (!this.state.password) {return;}\nthis.setState({\nbuttonDisabled: true})\ntry{\nlet res = await fetch('/login', {\nmethod: 'post',\nheaders: {\n'Accept': 'application/json',\n'Content-type': 'application/json'},\nbody: JSON.stringify({\nusername: this.state.username,\npassword: this.state.password,\n})\n}\n);\n\nlet result = await res.json();\nif (result && result.success){\nUserStore.isLoggedIn = true;\nUserStore.username = result.username;\n}\nelse if (result && result.success === false){\nthis.resetForm();\nalert(result.msg);\n}\n}\ncatch(e){\nconsole.log(e);\nthis.resetForm();\n}\n}\n  render() {\n  return (\n    <div className=\"loginForm\">\n    Login Form\n    <InputField \n    type='text' \n    placeholder='Username'\n    value={this.state.username ? this.state.username: ''} \n    onChange={ (val) => this.setInputValue('username', val) }/>\n    <InputField \n    type='text' \n    placeholder='password'\n    value={this.state.passsword ? this.state.password: ''} \n    onChange={ (val) => this.setInputValue('password', val) }/> \n    <SubmitButton\n    text='Login'\n    disabled={this.state.buttonDisabled}\n    onClick={ () => this.doLogin() } />        \n    </div>\n  );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n   async componentDidMount() {\n        try{\n            let res = await fetch('/isLoggedIn', {\n            method: 'post',\n            headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n            }\n            });\n            let result = await res.json();\n            \n            if (result && result.success){\n            UserStore.loading = false;\n            UserStore.isLoggedin = true;\n            UserStore.username = result.username;}\n            else{\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n            }\n            }\n            catch(e){\n            UserStore.loading = false;\n            UserStore.isLoggedin = false;\n            }\n            }\n            \n  async doLogout(){\n        try{\n            let res = await fetch('/logout', {\n            method: 'post',\n            headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n            }\n            });\n            let result = await res.json();\n            \n            if (result && result.success){\n            UserStore.isLoggedin = false;\n            UserStore.username = '';}\n            \n            }\n            catch(e){\n            console.log(e)\n            }\n            }\n  render() {\n  if (UserStore.loading){\n  return(\n  <div className=\"App\">\n  <div className='container'>\n  loading........please wait......</div>\n  </div>\n  );\n  }\n  else{\n  if (UserStore.isLoggedIn){\n  return(\n  <div className=\"App\">\n  <div className='container'>\n  Welcome {UserStore.username} \n  <SubmitButton\n  text={'Log out'}\n  disabled={false}\n  onClick={ () => this.doLogout() } />\n  </div>\n  </div>\n  );\n  }\n  return (\n    <div className=\"App\">\n    <div className= 'container'>\n  \n   <LoginForm />\n    </div>\n      \n    </div>\n  );}\n  }\n  }\n\nexport default observer(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}